openapi: 3.0.0
info:
  version: 5.0.0
  title: Common Payment API
  description: |
    This specification defines a simple payment API for payment types used in Switzerland. The API is supposed to be used by customers who
    want to initiate a payment at their bank. Note that, consents and SCA will be handled in a dedicated specification file. This
    specification uses schema definitions from the Common Data Model v1.2.1.
  termsOfService: Tbd
  contact:
    email: info@common-api.ch
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: payment.common-api.ch/api/v5
externalDocs:
  description: Find out more about SFTI API specifications.
  url: https://www.common-api.ch
tags:
  - name: payments
    description: |
      Third party payment service considering bulk payments operations (JSON). PUT operation can be used for both payment submission and
      payment initiation (PSS/pss), depending on security implementation.
  - name: single payments
    description: |
      Third party payment service considering single payments operations (JSON). PUT operation can be used for both payment submission and
      payment initiation (PSS/pss), depending on security implementation.
  - name: standing orders
    description: Third party payment service considering standing order operations (JSON).
  - name: iso20022
    description: |
      Third party payment service considering pain.001 and pain.002 operations (XML). PUT operation can be used for both payment submission
      and payment initiation (PSS/pss), depending on security implementation.
security:
  - OAuth2:
      - read
      - write
paths:
  /standing-orders:
    get:
      tags:
        - standing orders
      summary: Get the list of all standing orders
      description: Return the list of all standing orders for the authenticated context.
      parameters:
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/client_id'
        - $ref: '#/components/parameters/correlation'
        - $ref: '#/components/parameters/agent'
        - $ref: '#/components/parameters/target_id'
        - $ref: '#/components/parameters/psu_ip'
        - $ref: '#/components/parameters/psu_user_agent'
        - $ref: '#/components/parameters/psu_accept_lang'
      responses:
        '200':
          description: List of standing orders.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
            X-Next-Cursor:
              $ref: '#/components/headers/X-Next-Cursor'
          content:
            application/json:
              schema:
                type: object
                required:
                  - submissions
                properties:
                  submissions:
                    type: array
                    items:
                      $ref: '#/components/schemas/StandingorderSubmissionRequest'
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'
    post:
      tags:
        - standing orders
      summary: Create a new Standing Order
      description: It is used to create a permanent order for the transfer of funds.
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/client_id'
        - $ref: '#/components/parameters/correlation'
        - $ref: '#/components/parameters/agent'
        - $ref: '#/components/parameters/target_id'
        - $ref: '#/components/parameters/psu_ip'
        - $ref: '#/components/parameters/psu_user_agent'
        - $ref: '#/components/parameters/psu_accept_lang'
      requestBody:
        description: Details of standing orders submission to be added.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StandingorderSubmissionRequest'
      responses:
        '201':
          description: Created.
          headers:
            Location:
              $ref: '#/components/headers/Location'
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandingorderSubmissionResponse'
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'
  /standing-orders/{submissionId}:
    get:
      tags:
        - standing orders
      summary: Get a specific standing order submission
      description: Retrieve a specific standing order submission.
      parameters:
        - $ref: '#/components/parameters/submission_id'
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/client_id'
        - $ref: '#/components/parameters/correlation'
        - $ref: '#/components/parameters/agent'
        - $ref: '#/components/parameters/target_id'
        - $ref: '#/components/parameters/psu_ip'
        - $ref: '#/components/parameters/psu_user_agent'
        - $ref: '#/components/parameters/psu_accept_lang'
      responses:
        '200':
          description: The original standing order submission.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandingorderSubmissionRequest'
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'
    delete:
      tags:
        - standing orders
      summary: Delete a specific standing order submission
      description: Delete a specific standing order submission.
      parameters:
        - $ref: '#/components/parameters/submission_id'
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/client_id'
        - $ref: '#/components/parameters/correlation'
        - $ref: '#/components/parameters/agent'
        - $ref: '#/components/parameters/target_id'
        - $ref: '#/components/parameters/psu_ip'
        - $ref: '#/components/parameters/psu_user_agent'
        - $ref: '#/components/parameters/psu_accept_lang'
      responses:
        '200':
          description: Standing order has been deleted.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
        '201':
          description: Standing order is marked for deletion.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'
  /standing-orders/{submissionId}/status:
    get:
      tags:
        - standing orders
      summary: Get status information for the specific standing order submission
      description: Retrieve a specific standing order submission's status.
      parameters:
        - $ref: '#/components/parameters/submission_id'
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/client_id'
        - $ref: '#/components/parameters/correlation'
        - $ref: '#/components/parameters/agent'
        - $ref: '#/components/parameters/target_id'
        - $ref: '#/components/parameters/psu_ip'
        - $ref: '#/components/parameters/psu_user_agent'
        - $ref: '#/components/parameters/psu_accept_lang'
      responses:
        '200':
          description: Status information for the specific standing order submission.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandingorderSubmissionStatus'
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'
  /payments:
    get:
      tags:
        - payments
      summary: Get the list of all payments
      description: Return the list of all payments for the authenticated context.
      parameters:
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/client_id'
        - $ref: '#/components/parameters/correlation'
        - $ref: '#/components/parameters/agent'
        - $ref: '#/components/parameters/target_id'
        - $ref: '#/components/parameters/psu_ip'
        - $ref: '#/components/parameters/psu_user_agent'
        - $ref: '#/components/parameters/psu_accept_lang'
      responses:
        '200':
          description: List of payments.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
            X-Next-Cursor:
              $ref: '#/components/headers/X-Next-Cursor'
          content:
            application/json:
              schema:
                type: object
                required:
                  - payments
                properties:
                  payments:
                    type: array
                    items:
                      $ref: '#/components/schemas/PaymentSubmissionRequest'
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'
    post:
      tags:
        - payments
      summary: Initiate new payments submission
      description: Create new payments submission.
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/client_id'
        - $ref: '#/components/parameters/correlation'
        - $ref: '#/components/parameters/agent'
        - $ref: '#/components/parameters/target_id'
        - $ref: '#/components/parameters/psu_ip'
        - $ref: '#/components/parameters/psu_user_agent'
        - $ref: '#/components/parameters/psu_accept_lang'
      requestBody:
        description: Details of payments submission to be added.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentSubmissionRequest'
      responses:
        '201':
          description: Created.
          headers:
            Location:
              $ref: '#/components/headers/Location'
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSubmissionResponse'
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'
  /payments/{submissionId}:
    delete:
      tags:
        - payments
      summary: Delete a specific payment submission before executed
      description: Delete a specific payment submission before executed.
      parameters:
        - $ref: '#/components/parameters/submission_id'
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/client_id'
        - $ref: '#/components/parameters/correlation'
        - $ref: '#/components/parameters/agent'
        - $ref: '#/components/parameters/target_id'
        - $ref: '#/components/parameters/psu_ip'
        - $ref: '#/components/parameters/psu_user_agent'
        - $ref: '#/components/parameters/psu_accept_lang'
      responses:
        '200':
          description: Payment submission has been deleted.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
        '201':
          description: Payment submission is marked for deletion.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'
  /payments/{submissionId}/status:
    get:
      tags:
        - payments
      summary: Get status information for the specific payment submission
      description: Retrieve a specific payment submission's status.
      parameters:
        - $ref: '#/components/parameters/submission_id'
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/client_id'
        - $ref: '#/components/parameters/correlation'
        - $ref: '#/components/parameters/agent'
        - $ref: '#/components/parameters/target_id'
        - $ref: '#/components/parameters/psu_ip'
        - $ref: '#/components/parameters/psu_user_agent'
        - $ref: '#/components/parameters/psu_accept_lang'
      responses:
        '200':
          description: Status information for the specific payment submission.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSubmissionStatus'
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'
  /single-payments:
    get:
      tags:
        - single payments
      summary: Get the list of all payments (all payment types)
      description: Return the list of all initiated payments of all types for the authenticated context.
      parameters:
        - $ref: '#/components/parameters/entry_reference_from'
        - $ref: '#/components/parameters/date_from'
        - $ref: '#/components/parameters/date_to'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/client_id'
        - $ref: '#/components/parameters/correlation'
        - $ref: '#/components/parameters/agent'
        - $ref: '#/components/parameters/target_id'
        - $ref: '#/components/parameters/psu_ip'
        - $ref: '#/components/parameters/psu_user_agent'
        - $ref: '#/components/parameters/psu_accept_lang'
      responses:
        '200':
          description: Paginated list of all payments.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
            X-Next-Cursor:
              $ref: '#/components/headers/X-Next-Cursor'
          content:
            application/json:
              schema:
                type: object
                required:
                  - payments
                properties:
                  payments:
                    type: array
                    items:
                      $ref: '#/components/schemas/SinglepaymentsSubmissionRequest'
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'
    post:
      tags:
        - single payments
      summary: Initiate new single payments submission
      description: Create new single payments submission.
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/client_id'
        - $ref: '#/components/parameters/correlation'
        - $ref: '#/components/parameters/agent'
        - $ref: '#/components/parameters/target_id'
        - $ref: '#/components/parameters/psu_ip'
        - $ref: '#/components/parameters/psu_user_agent'
        - $ref: '#/components/parameters/psu_accept_lang'
      requestBody:
        description: Details of single payments submission to be added.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SinglepaymentsSubmissionRequest'
      responses:
        '201':
          description: Created.
          headers:
            Location:
              $ref: '#/components/headers/Location'
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SinglepaymentsSubmissionResponse'
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'
  /single-payments/{submissionId}:
    get:
      tags:
        - single payments
      summary: Get a specific payment
      description: Receive payment with corresponding submissionId.
      parameters:
        - $ref: '#/components/parameters/submission_id'
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/client_id'
        - $ref: '#/components/parameters/correlation'
        - $ref: '#/components/parameters/agent'
        - $ref: '#/components/parameters/target_id'
        - $ref: '#/components/parameters/psu_ip'
        - $ref: '#/components/parameters/psu_user_agent'
        - $ref: '#/components/parameters/psu_accept_lang'
      responses:
        '200':
          description: Details on the chosen payment.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SinglepaymentsSubmissionRequest'
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'
    delete:
      tags:
        - single payments
      summary: Delete a single payment
      description: Delete single payment with corresponding submissionId.
      parameters:
        - $ref: '#/components/parameters/submission_id'
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/client_id'
        - $ref: '#/components/parameters/correlation'
        - $ref: '#/components/parameters/agent'
        - $ref: '#/components/parameters/target_id'
        - $ref: '#/components/parameters/psu_ip'
        - $ref: '#/components/parameters/psu_user_agent'
        - $ref: '#/components/parameters/psu_accept_lang'
      responses:
        '200':
          description: Payment has been deleted.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
        '201':
          description: Payment is marked for deletion.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'
  /single-payments/{submissionId}/status:
    get:
      tags:
        - single payments
      summary: Get status information for the specific single payment
      description: Retrieve a specific single payment submission's status.
      parameters:
        - $ref: '#/components/parameters/submission_id'
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/client_id'
        - $ref: '#/components/parameters/correlation'
        - $ref: '#/components/parameters/agent'
        - $ref: '#/components/parameters/target_id'
        - $ref: '#/components/parameters/psu_ip'
        - $ref: '#/components/parameters/psu_user_agent'
        - $ref: '#/components/parameters/psu_accept_lang'
      responses:
        '200':
          description: Status information for the specific payment submission.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSubmissionStatus'
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'
  /iso20022/payments:
    post:
      tags:
        - iso20022
      summary: Submit ISO20022 XML payment instruction (pain.001)
      description: Submit an XML pain.001 payment instruction according to the ISO20022 specification.
      parameters:
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/client_id'
        - $ref: '#/components/parameters/correlation'
        - $ref: '#/components/parameters/agent'
        - $ref: '#/components/parameters/target_id'
        - $ref: '#/components/parameters/psu_ip'
        - $ref: '#/components/parameters/psu_user_agent'
        - $ref: '#/components/parameters/psu_accept_lang'
      requestBody:
        description: The XML pain.001.
        required: true
        content:
          application/xml:
            schema:
              type: string
      responses:
        '201':
          description: Created.
          headers:
            Location:
              $ref: '#/components/headers/Location'
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSubmissionResponse'
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'
  /iso20022/payments/{submissionId}:
    get:
      tags:
        - iso20022
      summary: Submitted ISO20022 XML pain.001 message
      description: Retrieves the submitted ISO20022 XML pain.001 message.
      parameters:
        - $ref: '#/components/parameters/submission_id'
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/client_id'
        - $ref: '#/components/parameters/correlation'
        - $ref: '#/components/parameters/agent'
        - $ref: '#/components/parameters/target_id'
        - $ref: '#/components/parameters/psu_ip'
        - $ref: '#/components/parameters/psu_user_agent'
        - $ref: '#/components/parameters/psu_accept_lang'
      responses:
        '200':
          description: Returns the requested ISO20022 XML pain.001 message.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/xml:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'
    delete:
      tags:
        - iso20022
      summary: Delete ISO20022 XML PAIN.001 message
      description: Deletes the submitted ISO20022 XML PAIN.001 message before execution.
      parameters:
        - $ref: '#/components/parameters/submission_id'
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/client_id'
        - $ref: '#/components/parameters/correlation'
        - $ref: '#/components/parameters/agent'
        - $ref: '#/components/parameters/target_id'
        - $ref: '#/components/parameters/psu_ip'
        - $ref: '#/components/parameters/psu_user_agent'
        - $ref: '#/components/parameters/psu_accept_lang'
      responses:
        '200':
          description: ISO20022 XML pain.001 message submission has been deleted.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
        '201':
          description: ISO20022 XML pain.001 message submission is marked for deletion.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'
  /iso20022/payments/{submissionId}/status:
    get:
      tags:
        - iso20022
      summary: Get the ISO20022 XML status report (PAIN.002) for a specific payment instruction
      description: The status report for the requested XML ISO20022 payment instruction (PAIN.002).
      parameters:
        - $ref: '#/components/parameters/submission_id'
        - $ref: '#/components/parameters/authorization'
        - $ref: '#/components/parameters/client_id'
        - $ref: '#/components/parameters/correlation'
        - $ref: '#/components/parameters/agent'
        - $ref: '#/components/parameters/target_id'
        - $ref: '#/components/parameters/psu_ip'
        - $ref: '#/components/parameters/psu_user_agent'
        - $ref: '#/components/parameters/psu_accept_lang'
      responses:
        '200':
          description: Returns the requested ISO20022 XML pain.002 message.
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          content:
            application/xml:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/standard400'
        '401':
          $ref: '#/components/responses/standard401'
        '403':
          $ref: '#/components/responses/standard403'
        '404':
          $ref: '#/components/responses/standard404'
        '405':
          $ref: '#/components/responses/standard405'
        '500':
          $ref: '#/components/responses/standard500'
        '501':
          $ref: '#/components/responses/standard501'
        '503':
          $ref: '#/components/responses/standard503'
components:
  schemas:
    Amount:
      description: An amount. Corresponds to the attribute _Amt_ in SPS/ISO-20022.
      type: string
      maxLength: 18
      pattern: ^[0-9]{1,12}([.][0-9]{1,5})?$
      example: '10.25'
    CommonClearingSystemMemberIdentification:
      title: Common Clearing System Member Identification
      description: Specifies the Information used to identify a member within a clearing system.
      type: object
      required:
        - code
        - memberId
      properties:
        code:
          type: string
          maxLength: 5
          description: |
            Identification code of a clearing system. Only "CHBCC" is permitted inSwitzerland. Corresponds to the attribute _ClrSysId ⇾ Cd_
            inSPS/ISO-20022.
          example: CHBCC
        memberId:
          type: string
          maxLength: 35
          description: |
            The identification of a clearing system member. Clearing ID (Bank Code, "National Identifier") of the financial institution.
            Corresponds to the attribute _ClrSysId ⇾ MmbId_ in SPS/ISO-20022.
          example: '00230'
    CommonErrorResponse:
      title: Common Error Response
      description: The common error response object.
      type: object
      required:
        - detail
        - title
        - type
      properties:
        detail:
          type: string
          description: The details about the common error response.
          example: Detailed problem description with respect to the current request
        title:
          type: string
          description: The title of the common error response.
          example: This is the general problem description
        type:
          $ref: '#/components/schemas/CommonErrorType'
        instance:
          type: string
          description: The path to the corresponding resource.
          example: path/to/corresponding/resource
        status:
          type: integer
          format: int32
          description: The HTTP status code generated by the origin server.
          example: 404
    CommonErrorType:
      title: Common Error Type
      description: Error Types for CommonErrorResponse.
      type: string
      enum:
        - /problems/INVALID_PAYLOAD
        - /problems/MALFORMED_PAYLOAD
        - /problems/INVALID_TOKEN
        - /problems/EXPIRED_TOKEN
        - /problems/INSUFFICIENT_PRIVILEGES
        - /problems/NO_ACCESS_TO_RESOURCE
        - /problems/RESOURCE_DOES_NOT_EXIST
        - /problems/RESOURCE_NOT_READY
        - /problems/RESOURCE_TOO_LARGE
        - /problems/WRONG_METHOD
        - /problems/OPERATION_NOT_ALLOWED
        - /problems/TECHNICAL_ERROR
        - /problems/NOT_IMPLEMENTED
        - /problems/SERVICE_UNAVAILABLE
      example: /problems/TECHNICAL_ERROR
    Currency:
      description: The ISO currency three-letter code. Corresponds to the attribute _Ccy_ in SPS/ISO-20022.
      type: string
      minLength: 3
      maxLength: 3
      example: CHF
    Date:
      title: Shared date
      description: A date.
      type: string
      format: date
      example: '2018-04-13'
    DayOfExecution:
      title: Day of Execution
      description: |
        Day of execution as integer.
        This integer consists of up two characters. Leading zeroes are not allowed.
      type: string
      enum:
        - '1'
        - '2'
        - '3'
        - '4'
        - '5'
        - '6'
        - '7'
        - '8'
        - '9'
        - '10'
        - '11'
        - '12'
        - '13'
        - '14'
        - '15'
        - '16'
        - '17'
        - '18'
        - '19'
        - '20'
        - '21'
        - '22'
        - '23'
        - '24'
        - '25'
        - '26'
        - '27'
        - '28'
        - '29'
        - '30'
        - '31'
      maxLength: 2
      example: '1'
    EndDate:
      title: End Date
      description: The last applicable day of execution. If not given, it is an infinite standing order.
      type: string
      format: date
      example: '2018-04-13'
    EndToEndId:
      description: The endToEndId of the instruction item. Corresponds to the attribute _EndToEndId_ in SPS/ISO-20022.
      type: string
      maxLength: 35
      example: ENDTOENDID-001
    ExecutionRule:
      title: Execution Rule
      description: |
        *following* or *preceding* supported as values.
        This data attribute defines the behaviour when recurring payment dates falls on a weekend or bank holiday. The payment is then executed
        either the *preceding* or *following* workin day.
        ASPSP might reject the request due to the communicated value, if rules in Online-Banking are not supporting this execution rule.
      type: string
      enum:
        - following
        - preceding
      example: following
    FrequencyCode:
      title: Frequency Code
      description: |
        The following codes from the EventFrequency7Code of ISO 20022 are supported.
        - Daily
        - Weekly
        - EveryTwoWeeks
        - Monthly
        - EveryTwoMonths
        - Quarterly
        - SemiAnnual
        - Annual
      type: string
      enum:
        - Daily
        - Weekly
        - EveryTwoWeeks
        - Monthly
        - EveryTwoMonths
        - Quarterly
        - SemiAnnual
        - Annual
      example: Daily
    IbanIdentification:
      description: The International Bank Account Number (IBAN), associated with the account.
      type: string
      maxLength: 34
      pattern: ^[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}$
      example: CH5481230000001998736
    InitiatingPartyId:
      description: The identifier of the third party provider (TPP) who created the payment instruction message derived from the OAuth 2.0 flow.
      type: string
      maxLength: 32
      example: TPP01746
    InstructionId:
      description: The unique identifier (UUID) of the instruction item. Corresponds to the attribute _InstrId_ in SPS/ISO-20022.
      type: string
      maxLength: 35
      example: INSTR-001
    MessageId:
      description: The unique identifier (UUID) of the the instruction message. Corresponds to the attribute _MsgId_ in SPS/ISO-20022.
      type: string
      maxLength: 35
      example: eb6305c91f7f49deaed016487c27b42d
    PaymentBookingInstruction:
      title: Payment Booking Instruction
      description: |
        The payment booking instruction, i.e. the method for processing and grouping a payment. Corresponds to the attribute _DbtrAcct ⇾ Tp ⇾
        Prtry_ in SPS/ISO-20022. Possible methods are:
        - SINGLEBOOKING_SIA
        - SINGLEBOOKING_NOA
        - BATCHBOOKING_SALA_NOA
        - BATCHBOOKING_SALA_CND
        - BATCHBOOKING_NOA
        - BATCHBOOKING_CND
        - BATCHBOOKING_CWD
      type: string
      enum:
        - SINGLEBOOKING_SIA
        - SINGLEBOOKING_NOA
        - BATCHBOOKING_SALA_NOA
        - BATCHBOOKING_SALA_CND
        - BATCHBOOKING_NOA
        - BATCHBOOKING_CND
        - BATCHBOOKING_CWD
      example: BATCHBOOKING_SALA_CND
    PaymentChargeBearerMethod:
      title: Payment Charge Bearer Method
      description: |
        The payment charge bearer method, i.e. who is responsible for paying the transaction fees associated with a payment. Corresponds to the
        attribute _SvcLvl ⇾ Cd_ in SPS/ISO-20022. Possible methods are: - DEBT (debtor) - CRED (creditor) - SHAR (shared) - SLEV (service level)
      type: string
      enum:
        - DEBT
        - CRED
        - SHAR
        - SLEV
      example: SHAR
    PaymentCreditor:
      title: Payment Creditor
      description: The creditor of a payment.
      type: object
      required:
        - name
        - postalAddress
      properties:
        name:
          type: string
          maxLength: 140
          description: The name of the creditor of a payment. Restriction for payment type SEis 70 characters.
          example: Hans Muster
        postalAddress:
          description: The postal address of the creditor of a payment.
          $ref: '#/components/schemas/PaymentPostalAddress'
    PaymentCreditorAgent:
      description: The creditor agent of a payment.
      type: object
      properties:
        bic:
          type: string
          minLength: 8
          maxLength: 11
          description: |
            The bank identifier code (BIC) of the creditor agent of a payment. Corresponds to the attribute _CdtrAgt ⇾ FinInstnId ⇾ BIC_ in
            SPS/ISO-20022. The BIC is an 8 or 11-character code that breaks down as follows:
            - First 4 characters - bank code (letters only)
            - Next 2 characters - ISO 3166-1 alpha-2 country code (letters only)
            - Next 2 characters - location code (letters and digits)
            - Last 3 characters (optional) - branch code, specifying a particular branch of the bank (letters and digits)
          example: DEUTDE5M101
        clearingSystemMemberIdentification:
          description: The clearing system member identification of the creditor agend of a payment.
          $ref: '#/components/schemas/CommonClearingSystemMemberIdentification'
    PaymentCurrencyAmount:
      title: Payment Currency-Amount
      description: Specifies the entry amount according to the account currency.
      type: object
      required:
        - amount
        - currency
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
          description: The entry amount, which will be reflected in the account balance.
        currency:
          $ref: '#/components/schemas/Currency'
          description: The ISO currency three-letter code in which the entry was posed.
    PaymentDebtor:
      title: Payment Debtor
      description: The debtor of a payment.
      type: object
      required:
        - name
        - postalAddress
      properties:
        name:
          type: string
          maxLength: 140
          description: The name of the debtor of a payment. Restriction for payment type SEPA is 70 characters.
          example: Hans Muster
        postalAddress:
          description: The postal address of the debtor of a payment.
          $ref: '#/components/schemas/PaymentPostalAddress'
    PaymentIbanAccount:
      title: Payment IBAN Account
      description: The IBAN account object.
      type: object
      required:
        - identification
        - type
      properties:
        identification:
          $ref: '#/components/schemas/IbanIdentification'
          description: The International Bank Account Number (IBAN), associated with the debtor account.
        type:
          type: string
          description: |
            The allowed account identification type for the creditor account depends on the payment type. The debtor account must always be an
            IBAN.
          enum:
            - IBAN
          example: IBAN
    PaymentIbanDetail:
      title: Payment IBAN Detail
      description: Details of an IBAN payment.
      type: object
      required:
        - creditor
        - creditorAccount
      properties:
        creditor:
          description: The creditor of the IBAN payment.
          $ref: '#/components/schemas/PaymentCreditor'
        creditorAccount:
          description: The creditor account of the IBAN payment. Corresponds to the attribute _CdtrAcct_ in SPS/ISO-20022.
          $ref: '#/components/schemas/PaymentIbanAccount'
        chargeBearer:
          description: The charge bearer of the IBAN payment.
          $ref: '#/components/schemas/PaymentChargeBearerMethod'
        creditorAgent:
          description: The creditor agent of the IBAN payment.
          $ref: '#/components/schemas/PaymentCreditorAgent'
        remittanceInformation:
          description: The remittance information of the IBAN payment.
          $ref: '#/components/schemas/PaymentRemittanceInformation'
        remittanceReference:
          description: The remittance reference of the IBAN payment.
          $ref: '#/components/schemas/PaymentIbanRemittanceReference'
        sepaIndicator:
          type: boolean
          description: Indicates if payment is a SEPA payment or not. Corresponds to the attribute _InstrPrty ⇾ SvcLvl ⇾ Cd_ in SPS/ISO-20022.
          example: true
    PaymentIbanRemittanceReference:
      title: Payment Remittance Reference
      description: |
        The IBAN payment remittance reference. A specific code or number that is used to identify and track payment transactions. Either
        remittanceReference or remittanceInformation must be set.
      type: object
      properties:
        reference:
          $ref: '#/components/schemas/RemittanceReference'
        type:
          type: string
          description: |
            The specific type of remittance reference. Either SCOR (Swiss QR Code Reference) or QRR (QR-Reference). Corresponds to the attribute
            _RmtInf ⇾ Strd ⇾ CdtrRefInf ⇾ Tp_ in SPS/ISO-20022.
          enum:
            - SCOR
            - QRR
          example: SCOR
    PaymentInstructionItem:
      title: Payment Instruction Item
      description: The payment instruction item object.
      type: object
      required:
        - endToEndId
        - instructedAmount
        - instructionId
      properties:
        endToEndId:
          description: The endToEndId of the payment instruction item.
          $ref: '#/components/schemas/EndToEndId'
        instructedAmount:
          description: The instructed amount of the payment. Corresponds to the attribute _InstdAmt_ in SPS/ISO-20022.
          $ref: '#/components/schemas/PaymentCurrencyAmount'
        instructionId:
          description: The identifier of the payment instruction item.
          $ref: '#/components/schemas/InstructionId'
        ibanDetails:
          description: The IBAN details of the payment instruction item.
          $ref: '#/components/schemas/PaymentIbanDetail'
        isrDetails:
          description: The ISR details of the payment instruction item.
          $ref: '#/components/schemas/PaymentIsrDetail'
        otherDetails:
          description: Other details of the payment instruction item.
          $ref: '#/components/schemas/PaymentOtherDetail'
        qrDetails:
          description: The QR details of the payment instruction item.
          $ref: '#/components/schemas/PaymentQrDetail'
        uetr:
          description: The uetr of the payment instruction item.
          $ref: '#/components/schemas/Uetr'
    PaymentInstructionItemStatus:
      title: Payment Instruction Item Status
      description: The status of the payment instruction item.
      type: object
      required:
        - instructionId
        - statusCode
      properties:
        instructionId:
          description: The unique identifier (UUID) of the payment instruction item.
          $ref: '#/components/schemas/InstructionId'
        statusCode:
          type: string
          description: |
            The status of the payment. Corresponds to the attribute _TxSts_ in SPS/ISO-20022. Possible status values are:
            - ACCP (accepted)
            - RJCT (rejected)
          enum:
            - ACCP
            - RJCT
          example: RJCT
        reasonCode:
          type: string
          description: The reason code for the instruction item. Corresponds to the attribute _StsRsnInf_ in SPS/ISO-20022.
          example: CURR
        reasonInformation:
          type: string
          maxLength: 105
          description: The reason information for the instruction item. Corresponds to the attribute _StsRsnInf ⇾ Rsn ⇾ Prtry_ in SPS/ISO-20022.
          example: currency USD not allowed for payment type IBAN
    PaymentIsrDetail:
      title: Payment ISR Detail
      description: Details of a ISR payment.
      type: object
      required:
        - remittanceReference
      properties:
        remittanceReference:
          description: The remittance reference of the ISR payment.
          $ref: '#/components/schemas/PaymentIsrRemittanceReference'
        creditor:
          description: The creditor of the ISR payment.
          $ref: '#/components/schemas/PaymentCreditor'
        creditorAccount:
          description: The creditor account of the ISR payment.
          $ref: '#/components/schemas/PaymentOtherAccount'
    PaymentIsrRemittanceReference:
      title: Payment Remittance Reference
      description: |
        The ISR payment remittance reference. A specific code or number that is used to identify and track payment transactions. Either
        remittanceReference or remittanceInformation must be set.
      type: object
      properties:
        reference:
          $ref: '#/components/schemas/RemittanceReference'
        type:
          type: string
          description: The specific type of remittance reference. Has to be ISR (Invoice Reference Number).
          enum:
            - ISR
          example: ISR
    PaymentOtherAccount:
      title: Payment Other Account
      description: The OTHER account object.
      type: object
      required:
        - identification
        - type
      properties:
        identification:
          type: string
          maxLength: 34
          description: The unique identification (UUID) of the OTHER payment account.
          example: 01-39139-1
        type:
          type: string
          description: The account identification type. Must always be OTHER.
          enum:
            - OTHER
          example: OTHER
    PaymentOtherDetail:
      title: Payment Other Detail
      description: Details of an OTHER payment.
      type: object
      required:
        - creditor
        - creditorAccount
        - creditorAgent
      properties:
        creditor:
          description: The creditor of the OTHER payment.
          $ref: '#/components/schemas/PaymentCreditor'
        creditorAccount:
          description: The creditor account of the OTHER payment. Corresponds to the attribute _CdtrAcct_ in SPS/ISO-20022.
          $ref: '#/components/schemas/PaymentOtherAccount'
        creditorAgent:
          description: The creditor agent of the OTHER payment.
          $ref: '#/components/schemas/PaymentCreditorAgent'
        chargeBearer:
          description: The charge bearer of the OTHER payment.
          $ref: '#/components/schemas/PaymentChargeBearerMethod'
        remittanceReference:
          description: The remittance reference of the OTHER payment.
          $ref: '#/components/schemas/PaymentOtherRemittanceReference'
    PaymentOtherRemittanceReference:
      title: Payment Remittance Reference
      description: |
        The OTHER payment remittance reference. A specific code or number that is used to identify and track payment transactions. Either
        remittanceReference or remittanceInformation must be set.
      type: object
      properties:
        reference:
          $ref: '#/components/schemas/RemittanceReference'
        type:
          type: string
          description: The specific type of remittance reference. Has to be SCOR (Swiss QR Code Reference).
          enum:
            - SCOR
          example: SCOR
    PaymentPostalAddress:
      title: Address for Payments
      description: The postal adress of a participant within the payment. Corresponds to the attribute _PstlAdr_ in SPS/ISO-20022.
      type: object
      required:
        - country
        - townName
      properties:
        country:
          type: string
          maxLength: 2
          pattern: ^[A-Z]{2}$
          description: The ISO country two-letter code. Corresponds to the attribute _Ctry_ in SPS/ISO-20022.
          example: CH
        townName:
          type: string
          maxLength: 35
          description: The town name. Corresponds to the attribute _TwnNm_ in SPS/ISO-20022.
          example: Biel
        addressLine1:
          type: string
          maxLength: 70
          description: |
            Additional address information, which cannot be supplied in structured elements. Corresponds to the attribute _AdrLine_ in
            SPS/ISO-20022.
          example: Carribean At Keppel Bay
        addressLine2:
          type: string
          maxLength: 70
          description: |
            Additional address information, which cannot be supplied in structured elements. Corresponds to the attribute _AdrLine_ in
            SPS/ISO-20022.
          example: 05-66
        buildingNumber:
          type: string
          maxLength: 16
          description: The building number. Corresponds to the attribute _BldgNb_ in SPS/ISO-20022.
          example: '24'
        postCode:
          type: string
          maxLength: 16
          description: The post code. Corresponds to the attribute _PstCd_ in SPS/ISO-20022.
          example: '2501'
        streetName:
          type: string
          maxLength: 70
          description: The street name. Corresponds to the attribute _StrtNm_ in SPS/ISO-20022.
          example: Rue de la gare
    PaymentQrDetail:
      title: Payment QR Detail
      description: Details of a QR payment.
      type: object
      required:
        - creditor
        - creditorAccount
      properties:
        creditor:
          description: The creditor of the QR payment.
          $ref: '#/components/schemas/PaymentCreditor'
        creditorAccount:
          description: The creditor account of the OR payment. Corresponds to the attribute _CdtrAcct_ in SPS/ISO-20022.
          $ref: '#/components/schemas/PaymentQrIbanAccount'
        remittanceInformation:
          description: The remittance information of the QR payment.
          $ref: '#/components/schemas/PaymentRemittanceInformation'
        remittanceReference:
          description: The remittance reference of the QR payment.
          $ref: '#/components/schemas/PaymentIbanRemittanceReference'
        ultimateCreditor:
          description: The ultimate creditor of the QR payment.
          $ref: '#/components/schemas/PaymentCreditor'
        ultimateDebtor:
          description: The ultimate debtor of the QR payment.
          $ref: '#/components/schemas/PaymentDebtor'
    PaymentQrIbanAccount:
      title: Payment QR-IBAN Account
      description: The QR-IBAN account object.
      type: object
      required:
        - identification
        - type
      properties:
        identification:
          $ref: '#/components/schemas/IbanIdentification'
          description: The International Bank Account Number (IBAN), associated with the debtor  account.
        type:
          type: string
          description: IBAN or QR-IBAN of the creditor, only IBANs with CH or LI country code permitted.
          enum:
            - IBAN
            - QR_IBAN
          example: IBAN
    PaymentRemittanceInformation:
      title: Payment Remittance Information
      description: Either remittanceReference or remittanceInformation must be set. Correspond to the attribute _RmtInf ⇾ Ustrd_ in SPS/ISO-20022.
      type: string
      maxLength: 140
      example: Rechnung Nr. 408
    PaymentSubmissionRequest:
      title: Payment Submission Request
      description: The payment submission request object.
      type: object
      required:
        - bookingInstruction
        - debtorAccount
        - initiatingPartyId
        - messageId
        - requestedExecutionDate
        - transactions
      properties:
        bookingInstruction:
          description: The payment booking instruction. Corresponds to the attribute _DbtrAcct ⇾ Tp ⇾ Prtry_ in SPS/ISO-20022.
          $ref: '#/components/schemas/PaymentBookingInstruction'
        debtorAccount:
          description: The account of the debtor. The debtor account must always be an IBAN. Corresponds to the attribute _DbtrAcct_ in SPS/ISO-20022.
          $ref: '#/components/schemas/PaymentIbanAccount'
        initiatingPartyId:
          description: The identifier of the third party provider (TPP) who created the payment instruction message derived from the OAuth 2.0 flow.
          $ref: '#/components/schemas/InitiatingPartyId'
        messageId:
          description: The unique identifier (UUID) of the the payment instruction message.
          $ref: '#/components/schemas/MessageId'
        requestedExecutionDate:
          description: |
            The requested execution date. In some cases, the financial institution can/will change this date, if the requested date is a bank /
            post holiday. If no date is chosen, the receiving financial institution will execute on the next possible date. Corresponds to the
            attribute _ReqdExctnDt_ in SPS/ISO-20022.
          $ref: '#/components/schemas/Date'
        transactions:
          type: array
          description: The transaction items.
          items:
            $ref: '#/components/schemas/PaymentInstructionItem'
    PaymentSubmissionResponse:
      title: Payment Submission Response (200)
      description: The payment submission response object.
      type: object
      properties:
        submissionId:
          $ref: '#/components/schemas/SubmissionId'
    PaymentSubmissionStatus:
      title: Payment Submission Status
      description: The payment submission status.
      type: object
      required:
        - statusCode
      properties:
        statusCode:
          type: string
          description: |
            The status of the payment. Corresponds to the attribute _TxSts_ in SPS/ISO-20022. Possible status values are:
            - ACCP (accepted)
            - RJCT (rejected)
            - PART (partially accepted)
            - RCVD (received)
          enum:
            - ACCP
            - RJCT
            - PART
            - RCVD
          example: PART
        messageId:
          description: The unique identifier (UUID) of the payment instruction message.
          $ref: '#/components/schemas/MessageId'
        transactions:
          type: array
          description: The payment transaction items.
          items:
            $ref: '#/components/schemas/PaymentInstructionItemStatus'
    RemittanceReference:
      description: |
        The reference number associated to the choosen remittance type. Corresponds to the attribute _RmtInf ⇾ Strd ⇾ CdtrRefInf ⇾ Ref_ in
        SPS/ISO-20022.
      type: string
      maxLength: 35
      example: '210000000003139471430009017'
    SinglepaymentsSubmissionRequest:
      title: Single Payment Submission Request
      description: The single payment submission request object.
      type: object
      required:
        - debtorAccount
        - endToEndId
        - frequency
        - initiatingPartyId
        - instructedAmount
        - instructionId
        - messageId
        - startDate
      properties:
        debtorAccount:
          description: The account of the debtor. The debtor account must always be an IBAN. Corresponds to the attribute _DbtrAcct_ in SPS/ISO-20022.
          $ref: '#/components/schemas/PaymentIbanAccount'
        endToEndId:
          description: The endToEndId of the single payment instruction item.
          $ref: '#/components/schemas/EndToEndId'
        initiatingPartyId:
          description: The identifier of the third party provider (TPP) who created the payment instruction message derived from the OAuth 2.0 flow.
          $ref: '#/components/schemas/InitiatingPartyId'
        instructedAmount:
          description: The instructed amount of the single payment. Corresponds to the attribute _InstdAmt_ in SPS/ISO-20022.
          $ref: '#/components/schemas/PaymentCurrencyAmount'
        instructionId:
          description: The unique identifier (UUID) of the single payment instruction item.
          $ref: '#/components/schemas/InstructionId'
        messageId:
          description: The unique identifier (UUID) of the the single payment instruction message.
          $ref: '#/components/schemas/MessageId'
        ibanDetails:
          description: The IBAN details of the single payment instruction item.
          $ref: '#/components/schemas/PaymentIbanDetail'
        isrDetails:
          description: The ISR details of the single payment instruction item.
          $ref: '#/components/schemas/PaymentIsrDetail'
        otherDetails:
          description: Other details of the single payment instruction item.
          $ref: '#/components/schemas/PaymentOtherDetail'
        qrDetails:
          description: The QR details of the single payment instruction item.
          $ref: '#/components/schemas/PaymentQrDetail'
        requestedExecutionDate:
          description: |
            The requested execution date. In some cases, the financial institution can/will change this date, if the requested date is a bank /
            post holiday. If no date is chosen, the receiving financial institution will execute on the next possible date. Corresponds to the
            attribute _ReqdExctnDt_ in SPS/ISO-20022.
          $ref: '#/components/schemas/Date'
    SinglepaymentsSubmissionResponse:
      title: Single Payment Submission Response
      description: The single payment submission response object.
      type: object
      properties:
        submissionId:
          $ref: '#/components/schemas/SubmissionId'
    StandingorderSubmissionRequest:
      title: Standing Order Submission Request
      description: The standing order submission request object.
      type: object
      required:
        - debtorAccount
        - endToEndId
        - frequency
        - initiatingPartyId
        - instructedAmount
        - instructionId
        - messageId
        - startDate
      properties:
        debtorAccount:
          description: The account of the debtor. The debtor account must always be an IBAN. Corresponds to the attribute _DbtrAcct_ in SPS/ISO-20022.
          $ref: '#/components/schemas/PaymentIbanAccount'
        endToEndId:
          description: The endToEndId of the standing order instruction item.
          $ref: '#/components/schemas/EndToEndId'
        frequency:
          description: The frequency of the standing order instruction item.
          $ref: '#/components/schemas/FrequencyCode'
        initiatingPartyId:
          description: The identifier of the third party provider (TPP) who created the payment instruction message derived from the OAuth 2.0 flow.
          $ref: '#/components/schemas/InitiatingPartyId'
        instructedAmount:
          description: The instructed amount of the standing order. Corresponds to the attribute _InstdAmt_ in SPS/ISO-20022.
          $ref: '#/components/schemas/PaymentCurrencyAmount'
        instructionId:
          description: The unique identifier (UUID) of the standing order instruction item.
          $ref: '#/components/schemas/InstructionId'
        messageId:
          description: The unique identifier (UUID) of the the standing order instruction message.
          $ref: '#/components/schemas/MessageId'
        startDate:
          description: The start date of the standing order instruction item.
          $ref: '#/components/schemas/StartDate'
        dayOfExecution:
          description: The day of execution of the standing order instruction item.
          $ref: '#/components/schemas/DayOfExecution'
        endDate:
          description: The end date of the standing order instruction item.
          $ref: '#/components/schemas/EndDate'
        executionBreaks:
          description: List of break periods.
          type: array
          items:
            type: object
            description: The break period items.
            properties:
              validFromDate:
                description: Start date of one break period. Standing order will not be processed from this date.
                $ref: '#/components/schemas/Date'
              validToDate:
                description: End date of one break period. Standing order will not be processed to this date.
                $ref: '#/components/schemas/Date'
        executionMode:
          type: string
          description: |
            The code of execution mode defines when or how standing order will be cancelled, processed the last time.
            * UNTIL_DATE - standing order is valid until specific date - field endDate.
            * UNTIL_CANCELLATION - standing order is valid forever and must be cancelled by client.
          example: UNTIL_DATE
          enum:
            - UNTIL_DATE
            - UNTIL_CANCELLATION
        executionRule:
          description: The execution rule of the standing order instruction item.
          $ref: '#/components/schemas/ExecutionRule'
        ibanDetails:
          description: The IBAN details of the standing order instruction item.
          $ref: '#/components/schemas/PaymentIbanDetail'
        isrDetails:
          description: The ISR details of the standing order instruction item.
          $ref: '#/components/schemas/PaymentIsrDetail'
        otherDetails:
          description: Other details of the standing order instruction item.
          $ref: '#/components/schemas/PaymentOtherDetail'
        qrDetails:
          description: The QR details of the standing order instruction item.
          $ref: '#/components/schemas/PaymentQrDetail'
        requestedExecutionDate:
          description: |
            The requested execution date. In some cases, the financial institution can/will change this date, if the requested date is a bank /
            post holiday. If no date is chosen, the receiving financial institution will execute on the next possible date. Corresponds to the
            attribute _ReqdExctnDt_ in SPS/ISO-20022.
          $ref: '#/components/schemas/Date'
    StandingorderSubmissionResponse:
      title: Standing Order Submission Response
      description: The standing order submission response object.
      type: object
      properties:
        submissionId:
          $ref: '#/components/schemas/SubmissionId'
    StandingorderSubmissionStatus:
      title: Standing Order Submission Status
      description: The standing order submission status object.
      type: object
      required:
        - statusCode
      properties:
        statusCode:
          type: string
          description: |
            The status of the payment. Corresponds to the attribute _TxSts_ in SPS/ISO-20022. Possible status values are:
            - ACCP (accepted)
            - RJCT (rejected)
            - PART (partially accepted)
          enum:
            - ACCP
            - RJCT
            - PART
          example: PART
        messageId:
          description: The unique identifier (UUID) of the the standing order instruction message.
          $ref: '#/components/schemas/MessageId'
        transactions:
          type: array
          description: The standing order transaction items.
          items:
            $ref: '#/components/schemas/PaymentInstructionItemStatus'
    StartDate:
      title: Start Date
      description: The first applicable day of execution starting from this date is the first payment.
      type: string
      format: date
      example: '2018-04-13'
    SubmissionId:
      title: Submission ID
      description: ID of payment submission to be retrieved.
      type: string
      maxLength: 35
      example: 618d4ac6e8a64e3d9f26aa3d8c4f323e
    Uetr:
      description: |
        Globally unique reference Reference assigned by the debtor (optional) or by the debtor agent. Corresponds to the attribute _CdtTrfTxInf ⇾
        PmtId ⇾ UETR_ in SPS/ISO-20022.
      type: string
      pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$
      example: fdc01a3e-4567-4abc-8def-1234567890ab
  responses:
    standard400:
      headers:
        Content-Language:
          $ref: '#/components/headers/Content-Language'
        X-Correlation-ID:
          $ref: '#/components/headers/X-Correlation-ID'
      description: |
        Bad Request - The format of the request was invalid.

        Examples:
        - InvalidPayload:
        type: /problems/INVALID_PAYLOAD
        title: Payload does not comply with API specification
        detail: Malformed JSON
        instance: path/to/corresponding/resource

        - InvalidParameter:
        type: /problems/INVALID_PAYLOAD
        title: Invalid parameter values have been detected
        detail: Sent data could not processed
        instance: path/to/corresponding/resource

        - MissingId:
        type: /problems/INVALID_PAYLOAD
        title: The payload was not valid
        detail: ID is missing
        instance: path/to/corresponding/resource
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/CommonErrorResponse'
    standard401:
      headers:
        Content-Language:
          $ref: '#/components/headers/Content-Language'
        X-Correlation-ID:
          $ref: '#/components/headers/X-Correlation-ID'
      description: Unauthorized - The request has not been applied because it provides no valid authentication credentials for the target resource.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/CommonErrorResponse'
    standard403:
      headers:
        Content-Language:
          $ref: '#/components/headers/Content-Language'
        X-Correlation-ID:
          $ref: '#/components/headers/X-Correlation-ID'
      description: |
        Forbidden - A valid OAuth Token was received, but access was denied. (Depending on the security requirements, providers can return 404
        instead)

        Examples:
        - InsufficientPrivileges:
        type: /problems/INSUFFICIENT_PRIVILEGES
        title: No privileges for the requested operation
        detail: Insufficient privileges for the requested operation
        instance: path/to/corresponding/resource

        - ExpiredToken:
        type: /problems/EXPIRED_TOKEN
        title: The OAuth Token is expired
        detail: The token is no longer valid
        instance: path/to/corresponding/resource

        - NoFutureDateSupported:
        type: /problems/MALFORMED_PAYLOAD
        title: Invalid parameter values have been detected
        detail: Data for date in the future cannot be requested
        instance: path/to/corresponding/resource
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/CommonErrorResponse'
    standard404:
      headers:
        Content-Language:
          $ref: '#/components/headers/Content-Language'
        X-Correlation-ID:
          $ref: '#/components/headers/X-Correlation-ID'
      description: |
        Not Found - Either the endpoint does not exist or a requested resource is not
        yet available (e.g., account statements)

        Examples:
        - InvalidAccounts:
        type: /problems/INSUFFICIENT_PRIVILEGES
        title: Insufficient privileges to access resource
        detail: The provided token does not grant access to the requested account
        instance: path/to/corresponding/resource

        - InvalidToken:
        type: /problems/INSUFFICIENT_PRIVILEGES
        title: Insufficient privileges to access resource
        detail: The provided token is not valid
        instance: path/to/corresponding/resource

        - WrongEndpointUrl:
        type: /problems/TECHNICAL_ERROR
        title: URL not found
        detail: The requested endpoint does not exist
        instance: path/to/corresponding/resource

        - NoIntradayDataSupported:
        type: /problems/NOT_IMPLEMENTED
        title: Feature is not implemented
        detail: This interface does not support intraday data
        instance: path/to/corresponding/resource
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/CommonErrorResponse'
    standard405:
      headers:
        Content-Language:
          $ref: '#/components/headers/Content-Language'
        X-Correlation-ID:
          $ref: '#/components/headers/X-Correlation-ID'
      description: |
        Method Not Allowed - The method received in the request-line is known by the origin server but not supported by the target resource.

        Examples:
        - NotSupportedOperation:
        type: /problems/WRONG_METHOD
        title: This HTTP operation is not allowed on this endpoint
        detail: Only GET operations are allowed
        instance: path/to/corresponding/resource
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/CommonErrorResponse'
    standard500:
      headers:
        Content-Language:
          $ref: '#/components/headers/Content-Language'
        X-Correlation-ID:
          $ref: '#/components/headers/X-Correlation-ID'
      description: |
        Internal Server Error - The server encountered an unexpected condition that
        prevented it from fulfilling the request.

        Examples:
        - TechnicalServerError:
        type: /problems/TECHNICAL_ERROR
        title: Technical error on server side
        detail: Processing yielded a technical error
        instance: path/to/corresponding/resource

        - ResourceTooLarge:
        type: /problems/RESOURCE_TOO_LARGE
        title: Generated resource was too large
        detail: The generated resource exceeded the size limit
        instance: path/to/corresponding/resource
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/CommonErrorResponse'
    standard501:
      headers:
        Content-Language:
          $ref: '#/components/headers/Content-Language'
        X-Correlation-ID:
          $ref: '#/components/headers/X-Correlation-ID'
      description: |
        Not Implemented - The server does not support the functionality required to fulfill the request.

        Examples:
        - EndpointNotImplemented:
        type: /problems/NOT_IMPLEMENTED
        title: Target endpoint is not implemented
        detail: This endpoint is not implemented
        instance: path/to/corresponding/resource
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/CommonErrorResponse'
    standard503:
      headers:
        Content-Language:
          $ref: '#/components/headers/Content-Language'
        X-Correlation-ID:
          $ref: '#/components/headers/X-Correlation-ID'
      description: Service Unavailable - The server is currently unable to handle the request due to a temporary overload or scheduled maintenance.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/CommonErrorResponse'
  parameters:
    agent:
      in: header
      name: User-Agent
      description: Name and version of the of the Client software.
      required: true
      schema:
        type: string
    authorization:
      in: header
      name: Authorization
      description: Bearer followed by a base64 encoded OAuth access token.
      required: true
      schema:
        type: string
    client_id:
      in: header
      name: X-CorAPI-Client-ID
      description: 'ID of the client forwarded to the provider (SCOPE: FI).'
      required: true
      schema:
        type: string
    correlation:
      in: header
      name: X-Correlation-ID
      description: Unique ID (defined by the caller) which will be reflected back in the response.
      required: true
      schema:
        type: string
    cursor:
      in: query
      name: cursor
      description: Optional parameter for pagination. Use the ID of the last item from the previous response to retrieve the next set of results.
      required: false
      schema:
        type: string
        example: cursorIDxyz
    date_from:
      in: query
      name: date_from
      description: The start date for the query. Must be earlier than or equal to the dateTo parameter.
      schema:
        $ref: '#/components/schemas/Date'
    date_to:
      in: query
      name: date_to
      description: The end date for the query. Must be later than or equal to the dateFrom parameter.
      schema:
        $ref: '#/components/schemas/Date'
    entry_reference_from:
      in: query
      name: entry_reference_from
      description: Get all objects after the one with the given ID.
      schema:
        type: string
    limit:
      in: query
      name: limit
      description: |
        Optional parameter for pagination, specifying the number of items to return. The actual maximum limit can be defined by the provider.
      required: false
      schema:
        type: integer
        format: int32
        example: 25
        minimum: 1
        default: 25
    psu_accept_lang:
      in: header
      name: X-PSU-Accept-Lang
      description: 'Language of client software (SCOPE: FI - optional).'
      required: false
      schema:
        type: string
    psu_ip:
      in: header
      name: X-PSU-IP-Address
      description: 'IP address of the user initiating the operation (SCOPE: FI - optional).'
      required: false
      schema:
        type: string
    psu_user_agent:
      in: header
      name: X-PSU-User-Agent
      description: 'User of the client software (SCOPE: FI - optional).'
      required: false
      schema:
        type: string
    submission_id:
      in: path
      name: submissionId
      description: ID of payment submission to be retrieved.
      required: true
      schema:
        maxLength: 35
        type: string
        example: 618d4ac6e8a64e3d9f26aa3d8c4f323e
    target_id:
      in: header
      name: X-CorAPI-Target-ID
      description: 'ID of the target, e.g., a financial institution (SCOPE: FI - optional).'
      required: false
      schema:
        type: string
  headers:
    Content-Language:
      description: Response language - always en.
      schema:
        type: string
    Location:
      description: Location (URI-reference) of the submitted message. The relative path shall be returned as URI-reference.
      schema:
        type: string
        example: /single-payments/618d4ac6e8a64e3d9f26aa3d8c4f323e
    X-Correlation-ID:
      description: Client defined ID from request to correlates HTTP requests between a client and server.
      schema:
        type: string
        example: f058ebd6-02f7-4d3f-942e-904344e8cde5
    X-Next-Cursor:
      description: |
        An opaque string value used for pagination. Include this value in the cursor parameter of the subsequent request to fetch the next page of
        results. An empty string indicates that there are no more results.
      required: false
      schema:
        type: string
        example: nextCursorIDxyz
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://example.com/oauth/authorize
          tokenUrl: https://example.com/oauth/token
          scopes:
            read: Grants read access
            write: Grants write access
